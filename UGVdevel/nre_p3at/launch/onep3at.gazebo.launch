<?xml version="1.0"?>
<launch>
<!-- Simulated P3AT - to be used in the multip3at.gazebo.launch file -->

<arg name="namespace" default="p0" />
<!-- Generate the tf_prefix from the namespace -->
<arg name="tfpre" default="$(arg namespace)" />
<arg name="initX" default="0" />
<arg name="initY" default="0" />
<arg name="initYaw" default="0" />

<!-- Put value on the parameter server in the group's namespace -->
<param name="tf_prefix" value="$(arg tfpre)" />

<!-- Use URDF model from AMR -->  
<arg name="urdf" default="$(find nre_p3at)/urdf/p3at.xacro" />
<param name="robot_description" command="$(find xacro)/xacro.py $(arg urdf) 
					 nsp:=$(arg namespace)
					 tfpre:=$(arg tfpre)" />

<node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-x $(arg initX) -y $(arg initY) -Y $(arg initYaw) -unpause -param robot_description -urdf -model $(arg namespace)" />

<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

<!-- Static offset between map and odometry frames -->
<!--<node pkg="tf" type="static_transform_publisher" name="map_odom_static_broadcaster" args="$(arg initX) $(arg initY) 0 $(arg initYaw) 0 0 /map /$(arg tfpre)/odom 100" />-->
<node pkg="tf" type="static_transform_publisher" name="map_odom_static_broadcaster" args="0 0 0 0 0 0 /map /$(arg tfpre)/odom 100" />
 

</launch>